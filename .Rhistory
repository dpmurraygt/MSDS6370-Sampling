#Find all combinations
FirstTaxpayer <-1:7
ThirdTaxPayer <-8
a<-as.data.frame(combn(FirstTaxpayer, 2))
b<-gather(a, Iteration, Member, 1:ncol(a))
View(b)
#Find all combinations
FirstTaxpayer <-1:7
ThirdTaxPayer <-8
a<-as.data.frame(combn(FirstTaxpayer, 2))
b<-gather(a, Iteration, Member, 1:ncol(a))
colnames(TaxPayerData)<-c("Member", "ActualIncome", "ReportedIncome")
c<-inner_join(TaxPayerData, b, by="Member")
View(c)
#Find all combinations
FirstTaxpayer <-1:7
ThirdTaxPayer <-8
a<-as.data.frame(combn(FirstTaxpayer, 2))
b<-gather(a, Iteration, Member, 1:ncol(a))
colnames(TaxPayerData)<-c("Member", "ActualIncome", "ReportedIncome")
c<-inner_join(b, TaxPayerData, by="Member")
View(c)
c %>% group_by(Iteration) %>% mutate(SampleMean = mean(ActualIncome), SampleSD = sd(ReportedIncome)) %>% spread(Member, Income)
c %>% group_by(Iteration) %>% mutate(SampleMean = mean(ActualIncome), SampleSD = sd(ReportedIncome)) %>% spread(Member, ActualIncome)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleSD = sd(ReportedIncome)) %>% spread(Member, Present = 1)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleSD = sd(ReportedIncome)) %>% spread(Member, Present, fill=0)
View(d)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleSD = sd(ReportedIncome)) %>%
subset(Iteration, Member, Present, SampleMean, SampleSD) %>% spread(Member, Present, fill=0)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleVar = (sd(ReportedIncome))^2) %>%
subset(Iteration, Member, Present, SampleMean, SampleSD) %>% spread(Member, Present, fill=0)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleVar = (sd(ReportedIncome))^2) %>%
subset(select = (Iteration, Member, Present, SampleMean, SampleSD)) %>% spread(Member, Present, fill=0)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleVar = (sd(ReportedIncome))^2) %>%
subset(select = c(Iteration, Member, Present, SampleMean, SampleSD)) %>% spread(Member, Present, fill=0)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleVar = (sd(ReportedIncome))^2) %>%
subset(select = c(Iteration, Member, Present, SampleMean, SampleVar)) %>% spread(Member, Present, fill=0)
View(d)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleVar = var(ActualIncome)) %>%
subset(select = c(Iteration, Member, Present, SampleMean, SampleVar)) %>% spread(Member, Present, fill=0)
View(d)
View(BestJudgement)
View(c)
sum(d$SampleMean)
sum(d$SampleVar)
mean(d$SampleMean)
mean(d$SampleVar)
#overall population mean
mean(TaxPayerData$ActualIncome[1:7])
#overall population variance
var(TaxPayerData$ActualIncome[1:7])
sum(d$SampleMean)
sum(d$SampleVar)
mean(d$SampleMean)
mean(d$SampleVar)
d %>% ggplot(aes(x=SampleMean)) + geom_histogram() + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleMean)) + geom_histogram(binwidth = 20) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleMean)) + geom_histogram(binwidth = 15) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleMean)) + geom_histogram(binwidth = 12) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleMean)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleMean)) + geom_histogram(binwidth = 5) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleMean)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleVar)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleVar)) + geom_histogram(binwidth = 100) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleVar)) + geom_histogram(binwidth = 250) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleVar)) + geom_histogram(bins = 20) + theme_light() + ggtitle("Sampling Distribution of Variance in Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleVar)) + geom_histogram(bins = 10) + theme_light() + ggtitle("Sampling Distribution of Variance in Two Person Samples of Actual Income")
e <- d %>% mutate(Stratum2 = 0.125*200) %>% mutate(OverallMean = .875*SampleMean + Stratum2)
View(e)
e <- d %>% mutate(Stratum2 = 0.125*200) %>% mutate(OverallMean = .875*SampleMean + Stratum2)
mean(e$OverallMean)
mean(e$OverallMean)
e <- d %>% mutate(Stratum2 = 0.125*200) %>% mutate(OverallMean = .875*SampleMean + Stratum2)
sum(e$OverallMean)
mean(e$OverallMean)
mean(TaxPayerData$ActualIncome)
e %>% ggplot(aes(x=OverallMean)) + geom_histogram() + theme_light() + ggtitle("Sampling Distribution of 2 Stratum Sample of Actual Income")
e %>% ggplot(aes(x=OverallMean)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of 2 Stratum Sample of Actual Income")
e %>% ggplot(aes(x=OverallMean)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of 2 Stratum Sample of Actual Income") + scale_x_continuous("Sample Mean")
e %>% ggplot(aes(x=OverallMean)) + geom_histogram(binwidth = 8) + theme_light() + ggtitle("Sampling Distribution of 2 Stratum Sample of Actual Income") + scale_x_continuous("Sample Mean")
e %>% ggplot(aes(x=OverallMean)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of 2 Stratum Sample of Actual Income") + scale_x_continuous("Sample Mean")
View(SampleArea)
TaxPayerData<-read_xlsx("Lab3_Files/Taxpayerdata.xlsx", sheet="Sheet1", skip=2)
View(TaxPayerData)
mean(TaxPayerData$ActualIncome)
mean(TaxPayerData$ActualIncome, na.rm=TRUE)
mean(TaxPayerData$ActualIncome, na.rm=TRUE)
e %>% ggplot(aes(x=OverallMean)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of 2 Stratum Sample of Actual Income") + scale_x_continuous("Sample Mean")
#read in a list of stores
read_xlsx("Data/StoreList.xlsx")
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
library(magrittr)
#read in a list of stores
read_xlsx("Data/StoreList.xlsx")
colnames(StoreList) <- c("store", "address", "city", "state")
#read in a list of stores
StoreList <- read_xlsx("Data/StoreList.xlsx")
colnames(StoreList) <- c("store", "address", "city", "state")
set.seed(12939); SampleStores <- sample_n(StoreList, 100)
View(SampleStores)
set.seed(12939); SampleStores <- sample_n(StoreList, 100) %>% arrange(store)
set.seed(12939); SampleStores <- sample_n(StoreList, 50) %>% arrange(store)
set.seed(210201);StartingPoint<-sample(x=1:1000, n=1)
set.seed(210201);StartingPoint<-sample(x=1:1000, 1)
SampleEvery <- round((StoreList - StartingPoint)/n_Samples)
#select a systematic sample
n_Samples = 20
#random starting point between 1 and 1000
set.seed(210201);StartingPoint<-sample(x=1:1000, 1)
#divide remaining chunk of stores by number of samples needed
SampleEvery <- round((StoreList - StartingPoint)/n_Samples)
SampleEvery <- round((StoreList - StartingPoint)/n_Samples,0)
SampleEvery <- round((NROW(StoreList) - StartingPoint)/n_Samples,0)
TakeTheseSamples<-seq(StartinPoint, n_Samples, SampleEvery)
TakeTheseSamples<-seq(StartingPoint, n_Samples, SampleEvery)
SampleEvery <- round((NROW(StoreList) - StartingPoint)/n_Samples,0)
TakeTheseSamples<-seq(from=StartingPoint, to=n_Samples, by=SampleEvery)
TakeTheseSamples<-seq(from=StartingPoint, to=n_Samples, by=-SampleEvery)
TakeTheseSamples<-seq(from=StartingPoint, to=NROW(StoreList), by=-SampleEvery)
TakeTheseSamples<-seq(from=StartingPoint, to=NROW(StoreList), by=SampleEvery)
SampleStoresSystematic[TakeTheseSamples,]
SampleStoresSystematic<- StoreList[TakeTheseSamples,]
View(SampleStoresSystematic)
head(SampleStores, 20)
View(SampleStoresSystematic)
head(SampleStoresSystematic, 20)
#select a systematic sample
n_Samples = 20
#random starting point between 1 and 1000
set.seed(210201);StartingPoint<-sample(x=1:1000, 1)
#divide remaining chunk of stores by number of samples needed
SampleEvery <- round((NROW(StoreList) - StartingPoint)/n_Samples,0)
TakeTheseSamples<-seq(from=StartingPoint, to=NROW(StoreList), by=SampleEvery)
#take every nth store
SampleStoresSystematic<- StoreList[TakeTheseSamples,]
head(SampleStoresSystematic, 20)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
library(magrittr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
library(magrittr)
Name<-LETTERS[seq( from = 1, to = 5 )]
GPA <- c(3.5, 2.7, 3.1, 3.2, 2.4)
StudentGPA <- data.frame(Name, GPA)
AllSampleSets <- combn(Name, 3)
AllSampleSets <- t(combn(Name, 3))
View(AllSampleSets)
b<-gather(AllSampleSets, Iteration, Member, 1:ncol(AllSampleSets))
AllSampleSets <- data.frame(t(combn(Name, 3)))
View(AllSampleSets)
AllSampleSetsTall<-gather(AllSampleSets, Iteration, Member, 1:ncol(AllSampleSets))
View(AllSampleSetsTall)
View(AllSampleSets)
AllSampleSets <- data.frame(t(combn(Name, 3))) %>% mutate(Iteration = row_number
AllSampleSetsTall<-gather(AllSampleSets, Iteration, Member, 1:ncol(AllSampleSets))
AllSampleSets <- data.frame(t(combn(Name, 3))) %>% mutate(Iteration = row_number)
AllSampleSets <- data.frame(t(combn(Name, 3))) %>% mutate(Iteration = n())
AllSampleSets <- data.frame(t(combn(Name, 3))) %>% mutate(Iteration = row_number())
View(AllSampleSets)
AllSampleSetsTall<-gather(AllSampleSets, Iteration, Member, 1:ncol(AllSampleSets)-1)
View(AllSampleSets)
AllSampleSetsTall<-gather(AllSampleSets, Iteration, Member, 1:3)
AllSampleSetsTall<-gather(AllSampleSets, MemberCode, Member, 1:3)
View(AllSampleSetsTall)
#Sampling Distribution of Sampling Means
AllSampleSets <- data.frame(t(combn(Name, 3))) %>% mutate(Iteration = row_number())
AllSampleSetsTall<-gather(AllSampleSets, Name, Member, 1:3)
AllSampleSetsTall <- inner_join(AllSampleSetsTall, StudentGPA, by ="Name")
AllSampleSets <- data.frame(t(combn(Name, 3))) %>% mutate(Iteration = row_number())
AllSampleSetsTall<-gather(AllSampleSets, Name, Member, 1:3)
View(AllSampleSetsTall)
AllSampleSetsTall<-gather(AllSampleSets, Iteration, Name, 1:3)
View(AllSampleSetsTall)
AllSampleSetsTall <- inner_join(AllSampleSetsTall, StudentGPA, by ="Name")
AllSampleSetsTall<-gather(AllSampleSets, Iteration, Name, 1:3)
View(AllSampleSetsTall)
AllSampleSetsTall<-gather(AllSampleSets, MemberNumber, Name, 1:3)
AllSampleSetsTall <- inner_join(AllSampleSetsTall, StudentGPA, by ="Name")
View(AllSampleSetsTall)
AllSampleSetsTall %>% group_by(Iteration) %>% summarise(MeanGPA = mean(GPA))
AllSampleSetsTall %>% group_by(Iteration) %>% summarise(MeanGPA = mean(GPA)) %>%
ggplot(aes(x=MeanGPA)) + geom_histogram() + theme_light()
AllSampleSetsTall %>% group_by(Iteration) %>% summarise(MeanGPA = mean(GPA)) %>%
ggplot(aes(x=MeanGPA)) + geom_histogram(bins=5) + theme_light()
AllSampleSetsTall %>% group_by(Iteration) %>% summarise(MeanGPA = mean(GPA)) %>%
ggplot(aes(x=MeanGPA)) + geom_histogram(bins=7) + theme_light()
AllSampleSetsTall %>% group_by(Iteration) %>% summarise(MeanGPA = mean(GPA)) %>%
ggplot(aes(x=MeanGPA)) + geom_histogram(bins=8) + theme_light()
AllSampleSetsTall %>% group_by(Iteration) %>% summarise(MeanGPA = mean(GPA)) %>%
ggplot(aes(x=MeanGPA)) + geom_histogram(bins=4) + theme_light()
#Sampling Distribution of Sampling Means
AllSampleSets <- data.frame(t(combn(Name, 3))) %>% mutate(Iteration = row_number())
AllSampleSetsTall<-gather(AllSampleSets, MemberNumber, Name, 1:3)
AllSampleSetsTall <- inner_join(AllSampleSetsTall, StudentGPA, by ="Name")
AllSampleSetsTall %>% group_by(Iteration) %>% summarise(MeanGPA = mean(GPA)) %>%
ggplot(aes(x=MeanGPA)) + geom_histogram(bins=4) + theme_light()
AllSampleSetsTall %>% group_by() %>% summarise(MeanGPA = mean(GPA))
AllSampleSetsTall %>% group_by(Iteration) %>% summarise(MeanGPA = mean(GPA))
AllSampleSetsTall %>% group_by(Iteration) %>% summarise(MeanGPA = mean(GPA)) %>% group_by() %>% summarise(MeanGPA)
AllSampleSetsTall %>% group_by(Iteration) %>% summarise(MeanGPA = mean(GPA)) %>% group_by() %>% summarise(SampleMean = mean(MeanGPA))
AllSampleSetsTall %>% group_by(Iteration) %>% summarise(MeanGPA = mean(GPA)) %>% group_by() %>% summarise(SampleMean = mean(MeanGPA), SampleSE = sd(MeanGPA)/sqrt(n()))
AllSampleSetsTall %>% group_by(Iteration) %>% summarise(MeanGPA = mean(GPA))
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
library(magrittr)
IndustryTwo<-read_xlsx("Lab4_Files/MSDS6370_LAB04.xlsx")
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n()) %>% mutate(share=count/sum(count))
View(CountsByStrata)
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n()) %>% mutate(share=count/sum(count)) %>% mutate(FromThisStratum= round(sample_size * share, 0))
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n()) %>% mutate(share=count/sum(count)) %>% mutate(FromThisStratum= round(sample_size * share, 0))
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n()) %>% mutate(share=count/sum(count)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
View(CountsByStrata)
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(Size = sum(mos)) %>% mutate(share=Size/sum(Size)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
View(CountsByStrata)
CountsByStrata
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n(), Size = sum(mos)) %>% mutate(share=Size/sum(Size)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
CountsByStrata
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n(), Size = sd(mos)) %>% mutate(share=Size/sum(Size)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
CountsByStrata
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n(), Size = sum(mos)) %>% mutate(share=Size/sum(Size)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
CountsByStrata
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
library(magrittr)
IndustryTwo<-read_xlsx("Lab4_Files/MSDS6370_LAB04.xlsx")
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n()) %>% mutate(share=count/sum(count)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
CountsByStrata
sample_Size = 51
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n()) %>% mutate(share=count/sum(count)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
CountsByStrata
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n()) %>% mutate(share=count/sum(count)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
CountsByStrata
stratum<-c(1, 2, 3, 4, 5)
selection<-c(19, 13, 8, 5, 4)
thisStratum <- 1
Sampled <-  IndustryTwo %>% filter(stratum = thisStratum) %>% sample_n(selection[thisStratum], replace=FALSE)
Sampled <-  IndustryTwo %>% filter(stratum == thisStratum) %>% sample_n(selection[thisStratum], replace=FALSE)
View(Sampled)
View(IndustryTwo)
Sampled <-  IndustryTwo %>% filter(stratum == thisStratum) %>% sample_n(selection[thisStratum], replace=FALSE) %>% group_by() %>% summarise(SampleMean = mean(sales), SampleSD = sd(sales))
stratumName<-c(1, 2, 3, 4, 5)
selection<-c(19, 13, 8, 5, 5)
thisStratum <- 1
for (thisStratum in stratumName) {
Sampled <-  IndustryTwo %>% filter(stratum == thisStratum) %>% sample_n(selection[thisStratum], replace=FALSE) %>% group_by() %>% summarise(SampleMean = mean(Sales), SampleSD = sd(Sales))
}
View(Sampled)
Sampled <-  IndustryTwo %>% filter(stratum == thisStratum) %>% sample_n(selection[thisStratum], replace=FALSE) %>% group_by(stratum) %>% summarise(SampleMean = mean(Sales), SampleSD = sd(Sales))
View(Sampled)
stratumName<-c(1, 2, 3, 4, 5)
selection<-c(19, 13, 8, 5, 5)
thisStratum <- 1
AllSamples<-data.frame()
for (thisStratum in stratumName) {
Sampled <-  IndustryTwo %>% filter(stratum == thisStratum) %>% sample_n(selection[thisStratum], replace=FALSE) %>% group_by(stratum) %>% summarise(SampleMean = mean(Sales), SampleSD = sd(Sales))
AllSamples <- rbind(AllSamples, Sampled)
}
View(AllSamples)
stratumName<-c(1, 2, 3, 4, 5)
selection<-c(4, 5, 10, 13, 18)
thisStratum <- 1
AllSamples<-data.frame()
for (thisStratum in stratumName) {
Sampled <-  IndustryTwo %>% filter(stratum == thisStratum) %>% sample_n(selection[thisStratum], replace=FALSE) %>% group_by(stratum) %>% summarise(SampleMean = mean(Sales), SampleSD = sd(Sales))
AllSamples <- rbind(AllSamples, Sampled)
}
View(AllSamples)
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n(), Size = sum(mos)) %>% mutate(share=Size/sum(Size)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
CountsByStrata
stratumName<-c(1, 2, 3, 4, 5)
selection<-c(3, 7, 11, 12, 17)
thisStratum <- 1
AllSamples<-data.frame()
for (thisStratum in stratumName) {
Sampled <-  IndustryTwo %>% filter(stratum == thisStratum) %>% sample_n(selection[thisStratum], replace=FALSE) %>% group_by(stratum) %>% summarise(SampleMean = mean(Sales), SampleSD = sd(Sales))
AllSamples <- rbind(AllSamples, Sampled)
}
View(AllSamples)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
library(magrittr)
IndustryTwo<-read_xlsx("Lab4_Files/MSDS6370_LAB04.xlsx")
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n()) %>% mutate(share=count/sum(count)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
CountsByStrata
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n()) %>% mutate(share=count/sum(count)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
CountsByStrata
CountsByStrata
View(CountsByStrata)
View(CountsByStrata)
View(CountsByStrata)
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n(), Size = sd(mos)) %>% mutate(share=Size/sum(Size)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
CountsByStrata
CountsByStrata
View(CountsByStrata)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
library(magrittr)
IndustryTwo<-read_xlsx("Lab4_Files/MSDS6370_LAB04.xlsx")
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n()) %>% mutate(share=count/sum(count)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
CountsByStrata
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
library(magrittr)
IndustryTwo<-read_xlsx("Lab4_Files/MSDS6370_LAB04.xlsx")
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n()) %>% mutate(share=count/sum(count)) %>% mutate(FromThisStratum= round(sample_Size * share, 0))
CountsByStrata
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n()) %>% mutate(share=count/sum(count)) %>% mutate(FromThisStratum= round(sample_Size * share, 0), Unrounded=(sample_Size * share)
CountsByStrata
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n()) %>% mutate(share=count/sum(count)) %>% mutate(FromThisStratum= round(sample_Size * share, 0), Unrounded=(sample_Size * share))
CountsByStrata
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n(), Size = sd(mos)) %>% mutate(share=Size/sum(Size)) %>% mutate(FromThisStratum= round(sample_Size * share, 0), unrounded=sample_Size * share)
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n(), Size = sd(mos)) %>% mutate(share=Size/sum(Size)) %>% mutate(FromThisStratum= round(sample_Size * share, 0), unrounded=sample_Size * share)
CountsByStrata
sample_Size = 50
CountsByStrata <- IndustryTwo %>% group_by(stratum) %>% summarise(count=n(), Size = sum(mos)) %>% mutate(share=Size/sum(Size)) %>% mutate(weight=Size, FromThisStratum= round(sample_Size * share, 0), unrounded=sample_Size * share)
CountsByStrata
72/27
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
library(magrittr)
IndustryTwo %>% ggplot(aes(x=mos)) + geom_histogram() + facet_wrap(~stratum)
IndustryTwo %>% ggplot(aes(x=mos)) + geom_histogram() + facet_wrap(~stratum, ncol=5)
View(IndustryTwo)
IndustryTwo %>% ggplot(aes(x=mos)) + geom_histogram() + facet_wrap(~stratum, ncol=5) + scale_x_continuous(breaks=c(0, 25000, 50000, 75000))
View(IndustryTwo)
IndustryTwo %>% ggplot(aes(x=mos)) + geom_histogram() + facet_wrap(~stratum, ncol=5) + scale_x_continuous(breaks=c(0, 750000, 15000000))
IndustryTwo %>% ggplot(aes(x=mos)) + geom_histogram() + facet_wrap(~stratum, ncol=5) + scale_x_continuous(breaks=c(0, 750000, 1500000))
IndustryTwo %>% ggplot(aes(x=mos)) + geom_histogram() + facet_wrap(~stratum, ncol=5) + scale_x_continuous(breaks=c(0, 500000))
IndustryTwo %>% ggplot(aes(x=mos)) + geom_histogram() + facet_wrap(~stratum, ncol=5) + scale_x_continuous(breaks=c(0, 500000)) + ggtitle("MOS by Stratum")
Waited<-rep(1, 60000)
DidntWait <-rep(0, 240000)
WaitLongerThan10 <- append(Waited, DidntWait)
North <- data.frame("North", WaitLongerThan10)
View(North)
Waited<-rep(1, 60000)
DidntWait <-rep(0, 240000)
WaitLongerThan10 <- append(Waited, DidntWait)
North <- data.frame("North", WaitLongerThan10)
colnames(North) <- c("Region", "WaitLongerThan10")
Waited<-rep(1, 60000)
DidntWait <-rep(0, 240000)
WaitLongerThan10 <- append(Waited, DidntWait)
North <- data.frame("North", WaitLongerThan10)
colnames(North) <- c("Region", "WaitLongerThan10")
Waited<-rep(1, 160000)
DidntWait <-rep(0, 240000)
WaitLongerThan10 <- append(Waited, DidntWait)
Central <- data.frame("Central", WaitLongerThan10)
colnames(Central) <- c("Region", "WaitLongerThan10")
Waited<-rep(1, 60000)
DidntWait <-rep(0, 240000)
WaitLongerThan10 <- append(Waited, DidntWait)
North <- data.frame("North", WaitLongerThan10)
colnames(North) <- c("Region", "WaitLongerThan10")
Waited<-rep(1, 160000)
DidntWait <-rep(0, 240000)
WaitLongerThan10 <- append(Waited, DidntWait)
Central <- data.frame("Central", WaitLongerThan10)
colnames(Central) <- c("Region", "WaitLongerThan10")
Waited<-rep(1, 240000)
DidntWait <-rep(0, 160000)
WaitLongerThan10 <- append(Waited, DidntWait)
South <- data.frame("South", WaitLongerThan10)
colnames(South) <- c("Region", "WaitLongerThan10")
AllVoters <- rbind(North, Central)
AllVoters <- rbind(AllVoters, South)
nSurvey <- 400
repetitions <- 100
i<- 1
SampleProportions <- data.frame()
for (i <= repetitions) {
nSurvey <- 400
repetitions <- 100
i<- 1
SampleProportions <- data.frame()
while (i <= repetitions) {
thisSample <- sample_n(AllVoters, nSurvey)
Proportion <- thisSample %>% mutate(Iteration = 1) %>% group_by(Iteration) %>% summarise(Proportion = sum(WaitLongerThan10))
SampleProportions <- rbind(SampleProportions, Proportion)
i<- i+1
}
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
library(magrittr)
nSurvey <- 400
repetitions <- 100
i<- 1
SampleProportions <- data.frame()
while (i <= repetitions) {
thisSample <- sample_n(AllVoters, nSurvey)
Proportion <- thisSample %>% mutate(Iteration = 1) %>% group_by(Iteration) %>% summarise(Proportion = sum(WaitLongerThan10))
SampleProportions <- rbind(SampleProportions, Proportion)
i<- i+1
}
nSurvey <- 400
repetitions <- 100
i<- 1
SampleProportions <- data.frame()
while (i <= repetitions) {
thisSample <- sample_n(AllVoters, nSurvey)
Proportion <- thisSample %>% mutate(Iteration = 1) %>% group_by(Iteration) %>% summarise(Proportion = sum(WaitLongerThan10)/nSurvey)
SampleProportions <- rbind(SampleProportions, Proportion)
i<- i+1
}
sd()
sd(SampleProportions$Proportion)
nSurvey <- 400
repetitions <- 500
i<- 1
SampleProportions <- data.frame()
while (i <= repetitions) {
thisSample <- sample_n(AllVoters, nSurvey)
Proportion <- thisSample %>% mutate(Iteration = 1) %>% group_by(Iteration) %>% summarise(Proportion = sum(WaitLongerThan10)/nSurvey)
SampleProportions <- rbind(SampleProportions, Proportion)
i<- i+1
}
sd(SampleProportions$Proportion)
nSurvey <- 1000
repetitions <- 500
i<- 1
SampleProportions <- data.frame()
while (i <= repetitions) {
thisSample <- sample_n(AllVoters, nSurvey)
Proportion <- thisSample %>% mutate(Iteration = 1) %>% group_by(Iteration) %>% summarise(Proportion = sum(WaitLongerThan10)/nSurvey)
SampleProportions <- rbind(SampleProportions, Proportion)
i<- i+1
}
sd(SampleProportions$Proportion)
nSurvey <- 400
nSurvey <- 400
repetitions <- 500
i<- 1
SampleProportions <- data.frame()
while (i <= repetitions) {
thisSample <- sample_n(AllVoters, nSurvey)
Proportion <- thisSample %>% mutate(Iteration = 1) %>% group_by(Iteration) %>% summarise(Proportion = sum(WaitLongerThan10)/nSurvey)
SampleProportions <- rbind(SampleProportions, Proportion)
i<- i+1
}
sd(SampleProportions$Proportion)
mean(SampleProportions$Proportion)
nSurvey <- 400
repetitions <- 500
i<- 1
SampleProportions <- data.frame()
while (i <= repetitions) {
thisSample <- sample_n(AllVoters, nSurvey)
Proportion <- thisSample %>% mutate(Iteration = 1) %>% group_by(Iteration) %>% summarise(Proportion = sum(WaitLongerThan10)/nSurvey)
SampleProportions <- rbind(SampleProportions, Proportion)
i<- i+1
}
sd(SampleProportions$Proportion)
mean(SampleProportions$Proportion)
nSurvey <- 400
repetitions <- 10000
i<- 1
SampleProportions <- data.frame()
while (i <= repetitions) {
thisSample <- sample_n(AllVoters, nSurvey)
Proportion <- thisSample %>% mutate(Iteration = 1) %>% group_by(Iteration) %>% summarise(Proportion = sum(WaitLongerThan10)/nSurvey)
SampleProportions <- rbind(SampleProportions, Proportion)
i<- i+1
}
sd(SampleProportions$Proportion)
mean(SampleProportions$Proportion)
