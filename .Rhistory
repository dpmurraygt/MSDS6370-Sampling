View(MinimumSample2)
View(MinimumSample)
MinimumSample <- AllFarms %>% filter() %>%
arrange(area) %>% top_n(10, -area) %>% group_by() %>% summarise(Mean=100*mean(area))
View(MinimumSample)
qnorm(1, mean(AllFarms$area),sd(AllFarms$area))
qnorm(10, mean(AllFarms$area),sd(AllFarms$area))
pnorm(10, mean(AllFarms$area),sd(AllFarms$area))
pnorm(1, mean(AllFarms$area),sd(AllFarms$area))
pnorm(1, mean(AllFarms$area),sd(AllFarms$area)/sqrt(10))
#calculate minimum possible sample from size 10:
MaximumSample <- AllFarms %>% filter(Type == "Simple Random Sample") %>%
arrange(area) %>% top_n(10, area) %>% group_by() %>% summarise(Mean=mean(area))
MaximumSample <- AllFarms %>% filter() %>%
arrange(area) %>% top_n(10, area) %>% group_by() %>% summarise(Mean=mean(area))
View(MaximumSample)
MaximumSample <- AllFarms %>% filter() %>%
arrange(area) %>% top_n(10, area) %>% group_by() %>% summarise(Mean=100*mean(area))
View(MaximumSample)
pnorm(1666.667, mean(AllFarms$area, sd(AllFarms$area)/sqrt(10)))
mean(AllFarms$area)
pnorm(16.667, mean(AllFarms$area, sd(AllFarms$area)/sqrt(10)))
pnorm(16.667, mean(AllFarms$area), sd(AllFarms$area)/sqrt(10))
sd(AllFarms$area)
pnorm(16.667, mean(AllFarms$area), 5.22)
pnorm(16.667, mean(AllFarms$area), 5.227/sqrt(10))
MaximumSample <- AllFarms %>% filter() %>%
arrange(area) %>% top_n(10, area)
View(MaximumSample)
MinimumSample <- AllFarms %>% filter() %>%
arrange(area) %>% top_n(10, -area)
View(MinimumSample)
MinimumSample <- AllFarms %>% filter() %>%
%>% top_n(10, -area) %>% group_by() %>% summarise(Mean=100*mean(area))
MinimumSample <- AllFarms %>% filter() %>%
top_n(10, -area) %>% group_by() %>% summarise(Mean=100*mean(area))
MinimumSample <- AllFarms %>% filter() %>%
top_n(10, -area)
MinimumSample <- AllFarms %>%
top_n(10, -area) %>% group_by() %>% summarise(Mean=100*mean(area))
MinimumSample <- AllFarms %>%
top_n(10, -area)
View(MinimumSample)
MinimumSample <- AllFarms %>%
top_n(n=10, wt=-area) %>% group_by() %>% summarise(Mean=100*mean(area))
MinimumSample <- AllFarms %>%
top_n(n=10, wt=-area)
View(MinimumSample)
MaximumSample <- AllFarms %>%
arrange(area) %>% top_n(n=10, wt=area) %>% group_by() %>% summarise(Mean=100*mean(area))
MaximumSample <- AllFarms %>%
arrange(area)
View(MaximumSample)
View(MaximumSample)
MaximumSample <- AllFarms %>%
arrange(area) %>% top_n(n=10, wt=area)
View(MaximumSample)
pnorm(17, mean(AllFarms$area), 5.227/sqrt(10))
#Mega sample of samples
AllFarms<-read_xlsx("Data/RectangleDims.xlsx")
n_samples <- 10000
sampleSize <-10
i<-1
SampleArea <- data.frame()
while(i <= n_samples){
thisSample<-100*mean(sample(AllFarms$area, sampleSize))
thisSample<- as.data.frame(thisSample)
thisSample$sampleNumber<-i
SampleArea<-rbind(SampleArea, thisSample)
i<-i+1
}
SampleArea %>% ggplot(aes(thisSample)) + geom_histogram() + theme_light()
mean(SampleArea$thisSample)
SampleArea %>% ggplot(aes(thisSample)) + geom_histogram() + theme_light() + ggtitle("Total Area Estimate - 10,000 Samples of Size 10")
View(SampleArea)
6/10000
#Mega sample of samples
AllFarms<-read_xlsx("Data/RectangleDims.xlsx")
n_samples <- 10000
sampleSize <-10
i<-1
SampleArea <- data.frame()
while(i <= n_samples){
thisSample<-100*mean(sample(AllFarms$area, sampleSize, replace=FALSE))
thisSample<- as.data.frame(thisSample)
thisSample$sampleNumber<-i
SampleArea<-rbind(SampleArea, thisSample)
i<-i+1
}
SampleArea %>% ggplot(aes(thisSample)) + geom_histogram() + theme_light() + ggtitle("Total Area Estimate - 10,000 Samples of Size 10")
mean(SampleArea$thisSample)
sum(SampleArea$thisSample>1000)
View(Rectangle_Response)
mean(SampleArea$thisSample)
sd(SampleArea$thisSample)
pnorm(780, 739.94, 157.4037)
pnorm(780, 739.94, 157.4037)
pnorm(1320, 739.94, 157.4037)
sum(SampleArea$thisSample<=1320 & SampleArea$thisSample>=780)
View(Rectangle_Response)
View(Rectangle_Response)
View(Rectangle_Response)
filter(Rectangle_Response, Type=="Judgement Sample") %>% mutate(DiffToActual = (Area-mean(AllFarms$area)))
filter(Rectangle_Response, Type=="Judgement Sample") %>% mutate(DiffToActual = (Area-100*mean(AllFarms$area)))
filter(Rectangle_Response, Type=="Judgement Sample") %>% mutate(DiffToActual = (Area-100*mean(AllFarms$area))) %>% group_by() %>%
summarise(mean(DiffToActual))
filter(Rectangle_Response, Type=="Judgement Sample") %>% mutate(DiffToActual = (Area-100*mean(AllFarms$area))) %>% group_by() %>%
summarise(mean(DiffToActual), sd(DiffToActual))
filter(Rectangle_Response, Type=="Judgement Sample") %>% mutate(DiffToActual = abs(Area-100*mean(AllFarms$area))) %>% group_by() %>%
summarise(mean(DiffToActual), sd(DiffToActual))
SampleArea %>% group_by() %>% mutate(DiffToActual = abs(thisSample - 100*mean(AllFarms$area))) %>% group_by() %>% summarise(mean(DiffToActual), sd(DiffToActual))
filter(Rectangle_Response, Type=="Judgement Sample") %>% mutate(DiffToActual = abs(Area-100*mean(AllFarms$area))) %>% group_by() %>%
summarise(mean(DiffToActual), sd(DiffToActual))
Rectangle_Response<-read_xlsx("Data/MSDS6370-RectangleExercise.xlsx")
Rectangle_Response <- Rectangle_Response %>% gather("Type", "Area", 2:3)
#Mean of Area
#minimum area
#maximum area
#Number< Mean
#Number >= Mean
Rectangle_Summary <- Rectangle_Response %>% group_by(Type) %>%
mutate(meanArea = mean(Area)) %>%
mutate(LessThan = ifelse(Area<meanArea, 1, 0), GreaterThan = ifelse(Area>=meanArea, 1, 0)) %>% group_by(Type) %>%
summarise(minArea = min(Area), maxArea=max(Area), meanArea = mean(Area), greaterThan = sum(GreaterThan), lessThan = sum(LessThan))
Rectangle_Response<-read_xlsx("Data/MSDS6370-RectangleExercise.xlsx")
Rectangle_Response <- Rectangle_Response %>% gather("Type", "Area", 2:3)
#Mean of Area
#minimum area
#maximum area
#Number< Mean
#Number >= Mean
Rectangle_Summary <- Rectangle_Response %>% group_by(Type) %>%
mutate(meanArea = mean(Area)) %>%
mutate(LessThan = ifelse(Area<meanArea, 1, 0), GreaterThan = ifelse(Area>=meanArea, 1, 0)) %>% group_by(Type) %>%
summarise(minArea = min(Area), maxArea=max(Area), meanArea = mean(Area), greaterThan = sum(GreaterThan), lessThan = sum(LessThan))
Rectangle_Summary
MinimumSample <- AllFarms %>%
top_n(n=10, wt=-area) %>% group_by() %>% summarise(Mean=100*mean(area))
MinimumSample <- AllFarms %>%
top_n(n=10, wt=-area)
top_n(AllFarms, n=10, wt=area)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
Rectangle_Response<-read_xlsx("Data/MSDS6370-RectangleExercise.xlsx")
Rectangle_Response <- Rectangle_Response %>% gather("Type", "Area", 2:3)
#Mean of Area
#minimum area
#maximum area
#Number< Mean
#Number >= Mean
Rectangle_Summary <- Rectangle_Response %>% group_by(Type) %>%
mutate(meanArea = mean(Area)) %>%
mutate(LessThan = ifelse(Area<meanArea, 1, 0), GreaterThan = ifelse(Area>=meanArea, 1, 0)) %>% group_by(Type) %>%
summarise(minArea = min(Area), maxArea=max(Area), meanArea = mean(Area), greaterThan = sum(GreaterThan), lessThan = sum(LessThan))
Rectangle_Summary
Rectangle2<-read_xlsx("Data/Lab1-Exercise2.xlsx")
Rectangle2 <- Rectangle2 %>% gather("Type", "Area", 2:3)
Rectangle_Summary <- Rectangle2 %>% group_by(Type) %>%
mutate(meanArea = mean(Area)) %>%
mutate(LessThan = ifelse(Area<meanArea, 1, 0), GreaterThan = ifelse(Area>=meanArea, 1, 0)) %>% group_by(Type) %>%
summarise(minArea = min(Area), maxArea=max(Area), meanArea = mean(Area), greaterThan = sum(GreaterThan), lessThan = sum(LessThan))
Rectangle2 %>% filter(Type == "Judgement Sample") %>%
ggplot(aes(x=Area)) + geom_histogram() + theme_light() +ggtitle("Distribution Of Judgment Samples")
Rectangle2 %>% filter(Type == "Simple Random Sample") %>%
ggplot(aes(x=Area)) + geom_histogram() + theme_light()+ggtitle("Distribution Of Simple Random Samples")
#calculate minimum possible sample from size 10:
MinimumSample <- AllFarms %>%
top_n(n=10, wt=-area) %>% group_by() %>% summarise(Mean=100*mean(area))
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
Rectangle_Response<-read_xlsx("Data/MSDS6370-RectangleExercise.xlsx")
Rectangle_Response <- Rectangle_Response %>% gather("Type", "Area", 2:3)
#Mean of Area
#minimum area
#maximum area
#Number< Mean
#Number >= Mean
Rectangle_Summary <- Rectangle_Response %>% group_by(Type) %>%
mutate(meanArea = mean(Area)) %>%
mutate(LessThan = ifelse(Area<meanArea, 1, 0), GreaterThan = ifelse(Area>=meanArea, 1, 0)) %>% group_by(Type) %>%
summarise(minArea = min(Area), maxArea=max(Area), meanArea = mean(Area), greaterThan = sum(GreaterThan), lessThan = sum(LessThan))
Rectangle_Summary
Rectangle2<-read_xlsx("Data/Lab1-Exercise2.xlsx")
Rectangle2 <- Rectangle2 %>% gather("Type", "Area", 2:3)
Rectangle_Summary <- Rectangle2 %>% group_by(Type) %>%
mutate(meanArea = mean(Area)) %>%
mutate(LessThan = ifelse(Area<meanArea, 1, 0), GreaterThan = ifelse(Area>=meanArea, 1, 0)) %>% group_by(Type) %>%
summarise(minArea = min(Area), maxArea=max(Area), meanArea = mean(Area), greaterThan = sum(GreaterThan), lessThan = sum(LessThan))
Rectangle2 %>% filter(Type == "Judgement Sample") %>%
ggplot(aes(x=Area)) + geom_histogram() + theme_light() +ggtitle("Distribution Of Judgment Samples")
Rectangle2 %>% filter(Type == "Simple Random Sample") %>%
ggplot(aes(x=Area)) + geom_histogram() + theme_light()+ggtitle("Distribution Of Simple Random Samples")
#calculate minimum possible sample from size 10:
MaximumSample <- AllFarms %>%
arrange(area) %>% top_n(n=10, wt=area) %>% group_by() %>% summarise(Mean=100*mean(area))
mean(SampleArea$thisSample)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
Rectangle_Response<-read_xlsx("Data/MSDS6370-RectangleExercise.xlsx")
Rectangle_Response <- Rectangle_Response %>% gather("Type", "Area", 2:3)
#Mean of Area
#minimum area
#maximum area
#Number< Mean
#Number >= Mean
Rectangle_Summary <- Rectangle_Response %>% group_by(Type) %>%
mutate(meanArea = mean(Area)) %>%
mutate(LessThan = ifelse(Area<meanArea, 1, 0), GreaterThan = ifelse(Area>=meanArea, 1, 0)) %>% group_by(Type) %>%
summarise(minArea = min(Area), maxArea=max(Area), meanArea = mean(Area), greaterThan = sum(GreaterThan), lessThan = sum(LessThan))
Rectangle_Summary
Rectangle2<-read_xlsx("Data/Lab1-Exercise2.xlsx")
Rectangle2 <- Rectangle2 %>% gather("Type", "Area", 2:3)
Rectangle_Summary <- Rectangle2 %>% group_by(Type) %>%
mutate(meanArea = mean(Area)) %>%
mutate(LessThan = ifelse(Area<meanArea, 1, 0), GreaterThan = ifelse(Area>=meanArea, 1, 0)) %>% group_by(Type) %>%
summarise(minArea = min(Area), maxArea=max(Area), meanArea = mean(Area), greaterThan = sum(GreaterThan), lessThan = sum(LessThan))
Rectangle2 %>% filter(Type == "Judgement Sample") %>%
ggplot(aes(x=Area)) + geom_histogram() + theme_light() +ggtitle("Distribution Of Judgment Samples")
Rectangle2 %>% filter(Type == "Simple Random Sample") %>%
ggplot(aes(x=Area)) + geom_histogram() + theme_light()+ggtitle("Distribution Of Simple Random Samples")
#Mega sample of samples
AllFarms<-read_xlsx("Data/RectangleDims.xlsx")
n_samples <- 10000
sampleSize <-10
i<-1
SampleArea <- data.frame()
while(i <= n_samples){
thisSample<-100*mean(sample(AllFarms$area, sampleSize, replace=FALSE))
thisSample<- as.data.frame(thisSample)
thisSample$sampleNumber<-i
SampleArea<-rbind(SampleArea, thisSample)
i<-i+1
}
SampleArea %>% ggplot(aes(thisSample)) + geom_histogram() + theme_light() + ggtitle("Total Area Estimate - 10,000 Samples of Size 10")
mean(SampleArea$thisSample)
#calculate minimum possible sample from size 10:
MinimumSample <- AllFarms %>%
top_n(n=10, wt=-area) %>% group_by() %>% summarise(Mean=100*mean(area))
pnorm(1, mean(AllFarms$area),sd(AllFarms$area)/sqrt(10))
top_n(AllFarms, n=10, wt=area)
#calculate minimum possible sample from size 10:
MaximumSample <- AllFarms %>%
arrange(area) %>% top_n(n=10, wt=area) %>% group_by() %>% summarise(Mean=100*mean(area))
mean(AllFarms$area)
sd(AllFarms$area)
pnorm(17, mean(AllFarms$area), 5.227/sqrt(10))
#Can we construct a better Judgement Sample of 10?
BestJudgement <- Rectangle2 %>% filter(Type == "Judgement Sample") %>% mutate(DiffFromActual = abs(738-Area)) %>%
arrange(Area) %>% top_n(10, -DiffFromActual) %>% group_by() %>% summarise(Mean=mean(Area))
MinimumSample2 <- Rectangle2 %>% filter(Type == "Judgement Sample") %>%
arrange(Area) %>% top_n(10, -Area) %>% group_by() %>% summarise(Mean=mean(Area))
MaximumSample2 <- Rectangle2 %>% filter(Type == "Judgement Sample") %>%
arrange(Area) %>% top_n(10, Area) %>% group_by() %>% summarise(Mean=mean(Area))
sd(Rectangle2$Area[Rectangle2$Type=="Judgement Sample"])
mean(Rectangle2$Area[Rectangle2$Type=="Judgement Sample"])
pnorm(844, mean=928.7, sd=163.5)
mean(SampleArea$thisSample)
sd(SampleArea$thisSample)
pnorm(780, 739.94, 157.4037)
pnorm(1320, 739.94, 157.4037)
sum(SampleArea$thisSample<=1320 & SampleArea$thisSample>=780)
#How close are the judgement samples to the true mean?
filter(Rectangle_Response, Type=="Judgement Sample") %>% mutate(DiffToActual = abs(Area-100*mean(AllFarms$area))) %>% group_by() %>%
summarise(mean(DiffToActual), sd(DiffToActual))
SampleArea %>% group_by() %>% mutate(DiffToActual = abs(thisSample - 100*mean(AllFarms$area))) %>% group_by() %>% summarise(mean(DiffToActual), sd(DiffToActual))
pnorm()
rnorm(10, 0, 1)
read_xlsx("Data/lab2Dat.xlsx")
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
read_xlsx("Data/lab2Dat.xlsx")
Town1<-read_xlsx("Data/lab2Dat.xls", sheet = "samples", range = "A2:C27", col_names = TRUE)
Town1<-read_xls("Data/lab2Dat.xls", sheet = "samples", range = "A2:C27", col_names = TRUE)
Town1 <- read_xls("Data/lab2Dat.xls", sheet = "samples", range = "A2:C27")
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
Town1 <- read_xls("Data/lab2Dat.xls", sheet = "samples", range = "A2:C27")
Town2 <- read_xls("Data/lab2Dat.xls", sheet = "samples", range = "e2:g27")
Town2 <- read_xls("Data/lab2Dat.xls", sheet = "samples", range = "e3:g27", col_names = FALSE)
Town1 <- read_xls("Data/lab2Dat.xls", sheet = "samples", range = "A3:C27", col_names = FALSE)
Town1 <- read_xls("Data/lab2Dat.xls", sheet = "samples", range = "A3:C27", col_names = FALSE)
Town1 <- read_excel("Data/lab2Dat.xls", sheet = "samples", range = "A3:C27", col_names = FALSE)
Town1 <- read_excel("Data/lab2Dat.xls", sheet = "samples", range = "A3:C27", col_names = FALSE)
Town1 <- read_excel("Data/SamplesLab2.xlsx", sheet = "samples", range = "A3:C27", col_names = FALSE)
Town1 <- read_xlsx("Data/SamplesLab2.xlsx", sheet = "samples", range = "A3:C27", col_names = FALSE)
Town1 <- read_xlsx("Data/SamplesLab2.xlsx", sheet = "samples", skip=1)
Town1 <- read_xlsx("Data/SamplesLab2.xlsx", skip=1)
View(Town1)
Town1 <- read_xlsx("Data/SamplesLab2.xlsx", range="A3:C27", skip=1)
Town1 <- readxl::read_xlsx("Data/SamplesLab2.xlsx", range="A3:C27", skip=1)
#library(dplyr)
#library(tidyr)
#library(ggplot2)
library(readxl)
#library(ggthemes)
Town1 <- readxl::read_xlsx("Data/SamplesLab2.xlsx", range="A3:C27", skip=1)
Town1 <- readxl::read_xlsx("Data/SamplesLab2.xlsx", skip=1)
Town1 <- readxl::read_xlsx("Data/SamplesLab2.xlsx", skip=1)
update.packages("readxl")
#library(dplyr)
#library(tidyr)
#library(ggplot2)
library(readxl)
#library(ggthemes)
Town1 <- readxl::read_xlsx("Data/SamplesLab2.xlsx", range="A3:C27", skip=1)
Samples <- readxl::read_xlsx("Data/SamplesLab2.xlsx", range="A3:C27", skip=1)
Samples <- readxl::read_xlsx("Data/SamplesLab2.xlsx")
group_by(Town) %>% summarise(MeanResponse = mean(Response), sdResponse = sd(Response))
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
library(magrittr)
Samples <- readxl::read_xlsx("Data/SamplesLab2.xlsx")
Samples %>% group_by(Town) %>% summarise(MeanResponse = mean(Response), sdResponse = sd(Response))
Samples %>% group_by(town) %>% summarise(MeanResponse = mean(Response), sdResponse = sd(Response))
View(Samples)
colnames(Samples)
Samples %>% group_by(Town) %>% summarise(MeanResponse = mean(response), sdResponse = sd(response))
Samples %>% group_by(town) %>% summarise(MeanResponse = mean(response), sdResponse = sd(response))
Samples %>% group_by(town, District) %>% summarise(Responses = n())
Samples %>% group_by(town) %>% summarise(MeanResponse = mean(response), sdResponse = sd(response), Responses = n())
PercentWithEmail<-read_xlsx("Data/PercentWithEmail.xlsx")
View(PercentWithEmail)
View(PercentWithEmail)
PercentWithEmail<-read_xlsx("Data/PercentWithEmail.xlsx", sheet="districts")
View(PercentWithEmail)
RespondWithEmail <- inner_join(Samples, PercentWithEmail, by=c("town", "District"))
View(RespondWithEmail)
View(PercentWithEmail)
View(Town1)
RespondWithEmail %>% mutate(WeightedResponse = PctWithEMail * response) %>% group_by(town) %>% summarise(TotalWeight = sum(PctWithEmail), TotalWeightedResponse = sum(WeightedResponse)) %>% mutate(MeanResponse = TotalWeightedResponse/TotalWeight)
colnames(RespondWithEmail)
RespondWithEmail %>% mutate(WeightedResponse = PctWithEMail * response) %>% group_by(town) %>% summarise(TotalWeight = sum(PctWithEMail), TotalWeightedResponse = sum(WeightedResponse)) %>% mutate(MeanResponse = TotalWeightedResponse/TotalWeight)
Samples %>% group_by(town, District) %>% summarise(MeanResponse = mean(response), sdResponse = sd(response), Responses = n())
Samples %>% group_by(town) %>% summarise(MeanResponse = mean(response), sdResponse = sd(response), Responses = n())
read_xlsx("Data/facesurvey.xlsx", sheet="Facesurvey")
read_xlsx("Data/facesurvey.xlsx", sheet="faceSurvey")
FaceSurvey<-read_xlsx("Data/facesurvey.xlsx", sheet="faceSurvey")
FaceSurvey %>% group_by(town) %>% summarise(Mean=mean(Response))
FaceSurvey %>% group_by(town) %>% summarise(Mean=mean(response))
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
library(magrittr)
FaceSurvey %>% ggplot(aes(x=response)) +geom_histogram() + theme_light() + facet_grid(~town)
FaceSurvey %>% ggplot(aes(x=response)) +geom_histogram() + theme_light() + facet_grid(~town) + ggtitle("In Person Survey Result by Town") + scale_x_continuous("Recommended Spending Per Student, $ in Thousands")
```{r fig.width=8.5, fig.height=4}
FaceSurvey %>% ggplot(aes(x=response)) +geom_histogram() + theme_light() + facet_grid(~town) + ggtitle("In Person Survey Result by Town") + scale_x_continuous("Recommended Spending Per Student, $ in Thousands")
RespondWithEmail %>% ggplot(aes(x=response)) +geom_histogram() + theme_light() + facet_grid(~town) + ggtitle("In Person Survey Result by Town") + scale_x_continuous("Recommended Spending Per Student, $ in Thousands")
RespondWithEmail %>% ggplot(aes(x=response)) +geom_histogram() + theme_light() + facet_grid(~town) + ggtitle("E-Mail Survey Results") + scale_x_continuous("Recommended Spending Per Student, $ in Thousands")
RespondWithEmail %>% ggplot(aes(x=response)) +geom_histogram(bins = 5) + theme_light() + facet_grid(~town) + ggtitle("E-Mail Survey Results") + scale_x_continuous("Recommended Spending Per Student, $ in Thousands")
RespondWithEmail %>% ggplot(aes(x=response)) +geom_histogram(bins = 8) + theme_light() + facet_grid(~town) + ggtitle("E-Mail Survey Results") + scale_x_continuous("Recommended Spending Per Student, $ in Thousands")
FaceSurvey %>% ggplot(aes(x=response)) +geom_histogram(bins = 10) + theme_light() + facet_grid(~town) + ggtitle("In Person Survey Result by Town") + scale_x_continuous("Recommended Spending Per Student, $ in Thousands")
View(Samples)
View(RespondWithEmail)
#weighted sample
#first pull in the data for each district's percent of residents with email
PercentWithEmail<-read_xlsx("Data/PercentWithEmail.xlsx", sheet="districts")
#Join to respondants
RespondWithEmail <- inner_join(Samples, PercentWithEmail, by=c("town", "District"))
#Create Weighted Response field, Group on Town, summarise mean and Std Dev
RespondWithEmail %>% mutate(WeightedResponse = 1/PctWithEMail * response) %>% group_by(town) %>% summarise(TotalWeight = sum(1/PctWithEMail), TotalWeightedResponse = sum(WeightedResponse)) %>% mutate(MeanResponse = TotalWeightedResponse/TotalWeight)
FaceSurvey<-read_xlsx("Data/facesurvey.xlsx", sheet="faceSurvey")
FaceSurvey %>% group_by(town) %>% summarise(Mean=mean(response))
RespondWithEmail %>% ggplot(aes(x=response)) +geom_histogram(bins = 8) + theme_light() + facet_grid(~town) + ggtitle("E-Mail Survey Results") + scale_x_continuous("Recommended Spending Per Student, $ in Thousands")
TaxPayerData<-read_xsx("Data/Lab3Files/MSDS6370Lab#3Taxpayerdata.xlsx", sheet="Sheet1", range="A3:C10")
TaxPayerData<-read_xsx("Data/Lab3Files/Taxpayerdata.xlsx", sheet="Sheet1", range="A3:C10")
TaxPayerData<-read_xlsx("Data/Lab3Files/Taxpayerdata.xlsx", sheet="Sheet1", range="A3:C10")
TaxPayerData<-read_xlsx("Data/Lab3Files/Taxpayerdata.xlsx", sheet="Sheet1", skip=2)
TaxPayerData<-read_xlsx("Data/Lab3Files/Taxpayerdata.xlsx", sheet="Sheet1", skip=2)
TaxPayerData<-read_xlsx("Data/Lab3_Files/Taxpayerdata.xlsx", sheet="Sheet1", skip=2)
TaxPayerData<-read_xlsx("Lab3_Files/Taxpayerdata.xlsx", sheet="Sheet1", skip=2)
View(TaxPayerData)
View(TaxPayerData)
TaxPayerData<-read_xlsx("Lab3_Files/Taxpayerdata.xlsx", sheet="Sheet1", skip=2)
View(TaxPayerData)
FirstTaxpayer <-1:7
SecondTayPayer <-8
combn(FirstTaxpayer, 2)
a<-combn(FirstTaxpayer, 2)
View(a)
#Find all combinations
FirstTaxpayer <-1:7
ThirdTaxPayer <-8
a<-combn(FirstTaxpayer, 2)
b<-gather(a, 2:ncol(a))
b<-gather(a, Iteration, Member, 2:ncol(a))
#Find all combinations
FirstTaxpayer <-1:7
ThirdTaxPayer <-8
a<-as.data.frame(combn(FirstTaxpayer, 2))
b<-gather(a, Iteration, Member, 2:ncol(a))
View(b)
View(a)
#Find all combinations
FirstTaxpayer <-1:7
ThirdTaxPayer <-8
a<-as.data.frame(combn(FirstTaxpayer, 2))
b<-gather(a, Iteration, Member, 1:ncol(a))
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(ggthemes)
library(magrittr)
#Find all combinations
FirstTaxpayer <-1:7
ThirdTaxPayer <-8
a<-as.data.frame(combn(FirstTaxpayer, 2))
b<-gather(a, Iteration, Member, 1:ncol(a))
View(b)
#Find all combinations
FirstTaxpayer <-1:7
ThirdTaxPayer <-8
a<-as.data.frame(combn(FirstTaxpayer, 2))
b<-gather(a, Iteration, Member, 1:ncol(a))
colnames(TaxPayerData)<-c("Member", "ActualIncome", "ReportedIncome")
c<-inner_join(TaxPayerData, b, by="Member")
View(c)
#Find all combinations
FirstTaxpayer <-1:7
ThirdTaxPayer <-8
a<-as.data.frame(combn(FirstTaxpayer, 2))
b<-gather(a, Iteration, Member, 1:ncol(a))
colnames(TaxPayerData)<-c("Member", "ActualIncome", "ReportedIncome")
c<-inner_join(b, TaxPayerData, by="Member")
View(c)
c %>% group_by(Iteration) %>% mutate(SampleMean = mean(ActualIncome), SampleSD = sd(ReportedIncome)) %>% spread(Member, Income)
c %>% group_by(Iteration) %>% mutate(SampleMean = mean(ActualIncome), SampleSD = sd(ReportedIncome)) %>% spread(Member, ActualIncome)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleSD = sd(ReportedIncome)) %>% spread(Member, Present = 1)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleSD = sd(ReportedIncome)) %>% spread(Member, Present, fill=0)
View(d)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleSD = sd(ReportedIncome)) %>%
subset(Iteration, Member, Present, SampleMean, SampleSD) %>% spread(Member, Present, fill=0)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleVar = (sd(ReportedIncome))^2) %>%
subset(Iteration, Member, Present, SampleMean, SampleSD) %>% spread(Member, Present, fill=0)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleVar = (sd(ReportedIncome))^2) %>%
subset(select = (Iteration, Member, Present, SampleMean, SampleSD)) %>% spread(Member, Present, fill=0)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleVar = (sd(ReportedIncome))^2) %>%
subset(select = c(Iteration, Member, Present, SampleMean, SampleSD)) %>% spread(Member, Present, fill=0)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleVar = (sd(ReportedIncome))^2) %>%
subset(select = c(Iteration, Member, Present, SampleMean, SampleVar)) %>% spread(Member, Present, fill=0)
View(d)
d<- c %>% group_by(Iteration) %>%mutate(Present=1) %>% mutate(SampleMean = mean(ActualIncome), SampleVar = var(ActualIncome)) %>%
subset(select = c(Iteration, Member, Present, SampleMean, SampleVar)) %>% spread(Member, Present, fill=0)
View(d)
View(BestJudgement)
View(c)
sum(d$SampleMean)
sum(d$SampleVar)
mean(d$SampleMean)
mean(d$SampleVar)
#overall population mean
mean(TaxPayerData$ActualIncome[1:7])
#overall population variance
var(TaxPayerData$ActualIncome[1:7])
sum(d$SampleMean)
sum(d$SampleVar)
mean(d$SampleMean)
mean(d$SampleVar)
d %>% ggplot(aes(x=SampleMean)) + geom_histogram() + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleMean)) + geom_histogram(binwidth = 20) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleMean)) + geom_histogram(binwidth = 15) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleMean)) + geom_histogram(binwidth = 12) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleMean)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleMean)) + geom_histogram(binwidth = 5) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleMean)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleVar)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleVar)) + geom_histogram(binwidth = 100) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleVar)) + geom_histogram(binwidth = 250) + theme_light() + ggtitle("Sampling Distribution of Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleVar)) + geom_histogram(bins = 20) + theme_light() + ggtitle("Sampling Distribution of Variance in Two Person Samples of Actual Income")
d %>% ggplot(aes(x=SampleVar)) + geom_histogram(bins = 10) + theme_light() + ggtitle("Sampling Distribution of Variance in Two Person Samples of Actual Income")
e <- d %>% mutate(Stratum2 = 0.125*200) %>% mutate(OverallMean = .875*SampleMean + Stratum2)
View(e)
e <- d %>% mutate(Stratum2 = 0.125*200) %>% mutate(OverallMean = .875*SampleMean + Stratum2)
mean(e$OverallMean)
mean(e$OverallMean)
e <- d %>% mutate(Stratum2 = 0.125*200) %>% mutate(OverallMean = .875*SampleMean + Stratum2)
sum(e$OverallMean)
mean(e$OverallMean)
mean(TaxPayerData$ActualIncome)
e %>% ggplot(aes(x=OverallMean)) + geom_histogram() + theme_light() + ggtitle("Sampling Distribution of 2 Stratum Sample of Actual Income")
e %>% ggplot(aes(x=OverallMean)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of 2 Stratum Sample of Actual Income")
e %>% ggplot(aes(x=OverallMean)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of 2 Stratum Sample of Actual Income") + scale_x_continuous("Sample Mean")
e %>% ggplot(aes(x=OverallMean)) + geom_histogram(binwidth = 8) + theme_light() + ggtitle("Sampling Distribution of 2 Stratum Sample of Actual Income") + scale_x_continuous("Sample Mean")
e %>% ggplot(aes(x=OverallMean)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of 2 Stratum Sample of Actual Income") + scale_x_continuous("Sample Mean")
View(SampleArea)
TaxPayerData<-read_xlsx("Lab3_Files/Taxpayerdata.xlsx", sheet="Sheet1", skip=2)
View(TaxPayerData)
mean(TaxPayerData$ActualIncome)
mean(TaxPayerData$ActualIncome, na.rm=TRUE)
mean(TaxPayerData$ActualIncome, na.rm=TRUE)
e %>% ggplot(aes(x=OverallMean)) + geom_histogram(binwidth = 10) + theme_light() + ggtitle("Sampling Distribution of 2 Stratum Sample of Actual Income") + scale_x_continuous("Sample Mean")
